//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleContributor.SapoContributorService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Politician", Namespace="http://schemas.datacontract.org/2004/07/WcfSapoManagerLibrary")]
    [System.SerializableAttribute()]
    public partial class Politician : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Party {
            get {
                return this.PartyField;
            }
            set {
                if ((object.ReferenceEquals(this.PartyField, value) != true)) {
                    this.PartyField = value;
                    this.RaisePropertyChanged("Party");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Proposal", Namespace="http://schemas.datacontract.org/2004/07/WcfSapoManagerLibrary")]
    [System.SerializableAttribute()]
    public partial class Proposal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SapoContributorService.IContributorService")]
    public interface IContributorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContributorService/AddPolitician", ReplyAction="http://tempuri.org/IContributorService/AddPoliticianResponse")]
        bool AddPolitician(string name, string party);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContributorService/AddPolitician", ReplyAction="http://tempuri.org/IContributorService/AddPoliticianResponse")]
        System.Threading.Tasks.Task<bool> AddPoliticianAsync(string name, string party);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContributorService/AddProposal", ReplyAction="http://tempuri.org/IContributorService/AddProposalResponse")]
        bool AddProposal(string title, string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContributorService/AddProposal", ReplyAction="http://tempuri.org/IContributorService/AddProposalResponse")]
        System.Threading.Tasks.Task<bool> AddProposalAsync(string title, string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContributorService/AddPoliticianVote", ReplyAction="http://tempuri.org/IContributorService/AddPoliticianVoteResponse")]
        bool AddPoliticianVote(System.Guid idPolitician, System.Guid idProposal, System.Nullable<bool> vote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContributorService/AddPoliticianVote", ReplyAction="http://tempuri.org/IContributorService/AddPoliticianVoteResponse")]
        System.Threading.Tasks.Task<bool> AddPoliticianVoteAsync(System.Guid idPolitician, System.Guid idProposal, System.Nullable<bool> vote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContributorService/AddPoliticianVoteByName", ReplyAction="http://tempuri.org/IContributorService/AddPoliticianVoteByNameResponse")]
        bool AddPoliticianVoteByName(string politicianName, string proposalName, bool vote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContributorService/AddPoliticianVoteByName", ReplyAction="http://tempuri.org/IContributorService/AddPoliticianVoteByNameResponse")]
        System.Threading.Tasks.Task<bool> AddPoliticianVoteByNameAsync(string politicianName, string proposalName, bool vote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContributorService/VerifyAndPersist", ReplyAction="http://tempuri.org/IContributorService/VerifyAndPersistResponse")]
        bool VerifyAndPersist(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContributorService/VerifyAndPersist", ReplyAction="http://tempuri.org/IContributorService/VerifyAndPersistResponse")]
        System.Threading.Tasks.Task<bool> VerifyAndPersistAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContributorService/ListPoliticians", ReplyAction="http://tempuri.org/IContributorService/ListPoliticiansResponse")]
        System.Collections.Generic.Queue<ConsoleContributor.SapoContributorService.Politician> ListPoliticians();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContributorService/ListPoliticians", ReplyAction="http://tempuri.org/IContributorService/ListPoliticiansResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Queue<ConsoleContributor.SapoContributorService.Politician>> ListPoliticiansAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContributorService/ListProposals", ReplyAction="http://tempuri.org/IContributorService/ListProposalsResponse")]
        System.Collections.Generic.Queue<ConsoleContributor.SapoContributorService.Proposal> ListProposals();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContributorService/ListProposals", ReplyAction="http://tempuri.org/IContributorService/ListProposalsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Queue<ConsoleContributor.SapoContributorService.Proposal>> ListProposalsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContributorServiceChannel : ConsoleContributor.SapoContributorService.IContributorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContributorServiceClient : System.ServiceModel.ClientBase<ConsoleContributor.SapoContributorService.IContributorService>, ConsoleContributor.SapoContributorService.IContributorService {
        
        public ContributorServiceClient() {
        }
        
        public ContributorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContributorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContributorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContributorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddPolitician(string name, string party) {
            return base.Channel.AddPolitician(name, party);
        }
        
        public System.Threading.Tasks.Task<bool> AddPoliticianAsync(string name, string party) {
            return base.Channel.AddPoliticianAsync(name, party);
        }
        
        public bool AddProposal(string title, string text) {
            return base.Channel.AddProposal(title, text);
        }
        
        public System.Threading.Tasks.Task<bool> AddProposalAsync(string title, string text) {
            return base.Channel.AddProposalAsync(title, text);
        }
        
        public bool AddPoliticianVote(System.Guid idPolitician, System.Guid idProposal, System.Nullable<bool> vote) {
            return base.Channel.AddPoliticianVote(idPolitician, idProposal, vote);
        }
        
        public System.Threading.Tasks.Task<bool> AddPoliticianVoteAsync(System.Guid idPolitician, System.Guid idProposal, System.Nullable<bool> vote) {
            return base.Channel.AddPoliticianVoteAsync(idPolitician, idProposal, vote);
        }
        
        public bool AddPoliticianVoteByName(string politicianName, string proposalName, bool vote) {
            return base.Channel.AddPoliticianVoteByName(politicianName, proposalName, vote);
        }
        
        public System.Threading.Tasks.Task<bool> AddPoliticianVoteByNameAsync(string politicianName, string proposalName, bool vote) {
            return base.Channel.AddPoliticianVoteByNameAsync(politicianName, proposalName, vote);
        }
        
        public bool VerifyAndPersist(string userName, string password) {
            return base.Channel.VerifyAndPersist(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyAndPersistAsync(string userName, string password) {
            return base.Channel.VerifyAndPersistAsync(userName, password);
        }
        
        public System.Collections.Generic.Queue<ConsoleContributor.SapoContributorService.Politician> ListPoliticians() {
            return base.Channel.ListPoliticians();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Queue<ConsoleContributor.SapoContributorService.Politician>> ListPoliticiansAsync() {
            return base.Channel.ListPoliticiansAsync();
        }
        
        public System.Collections.Generic.Queue<ConsoleContributor.SapoContributorService.Proposal> ListProposals() {
            return base.Channel.ListProposals();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Queue<ConsoleContributor.SapoContributorService.Proposal>> ListProposalsAsync() {
            return base.Channel.ListProposalsAsync();
        }
    }
}
