//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleAdmin.SapoManagerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Politician", Namespace="http://schemas.datacontract.org/2004/07/WcfSapoManagerLibrary")]
    [System.SerializableAttribute()]
    public partial class Politician : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Party {
            get {
                return this.PartyField;
            }
            set {
                if ((object.ReferenceEquals(this.PartyField, value) != true)) {
                    this.PartyField = value;
                    this.RaisePropertyChanged("Party");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Proposal", Namespace="http://schemas.datacontract.org/2004/07/WcfSapoManagerLibrary")]
    [System.SerializableAttribute()]
    public partial class Proposal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PoliticianProposal", Namespace="http://schemas.datacontract.org/2004/07/WcfSapoManagerLibrary")]
    [System.SerializableAttribute()]
    public partial class PoliticianProposal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdPoliticianField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdProposalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IdPolitician {
            get {
                return this.IdPoliticianField;
            }
            set {
                if ((this.IdPoliticianField.Equals(value) != true)) {
                    this.IdPoliticianField = value;
                    this.RaisePropertyChanged("IdPolitician");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IdProposal {
            get {
                return this.IdProposalField;
            }
            set {
                if ((this.IdProposalField.Equals(value) != true)) {
                    this.IdProposalField = value;
                    this.RaisePropertyChanged("IdProposal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Vote {
            get {
                return this.VoteField;
            }
            set {
                if ((this.VoteField.Equals(value) != true)) {
                    this.VoteField = value;
                    this.RaisePropertyChanged("Vote");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Elector", Namespace="http://schemas.datacontract.org/2004/07/WcfSapoManagerLibrary")]
    [System.SerializableAttribute()]
    public partial class Elector : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectorProposal", Namespace="http://schemas.datacontract.org/2004/07/WcfSapoManagerLibrary")]
    [System.SerializableAttribute()]
    public partial class ElectorProposal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdElectorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdProposalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IdElector {
            get {
                return this.IdElectorField;
            }
            set {
                if ((this.IdElectorField.Equals(value) != true)) {
                    this.IdElectorField = value;
                    this.RaisePropertyChanged("IdElector");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IdProposal {
            get {
                return this.IdProposalField;
            }
            set {
                if ((this.IdProposalField.Equals(value) != true)) {
                    this.IdProposalField = value;
                    this.RaisePropertyChanged("IdProposal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Vote {
            get {
                return this.VoteField;
            }
            set {
                if ((this.VoteField.Equals(value) != true)) {
                    this.VoteField = value;
                    this.RaisePropertyChanged("Vote");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AutenticationException", Namespace="http://schemas.datacontract.org/2004/07/WcfSapoManagerLibrary.Exception")]
    [System.SerializableAttribute()]
    public partial class AutenticationException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SapoManagerService.IPoliticianService")]
    public interface IPoliticianService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPoliticianService/GeneratePolitician", ReplyAction="http://tempuri.org/IPoliticianService/GeneratePoliticianResponse")]
        ConsoleAdmin.SapoManagerService.Politician GeneratePolitician(string name, string party);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPoliticianService/GeneratePolitician", ReplyAction="http://tempuri.org/IPoliticianService/GeneratePoliticianResponse")]
        System.Threading.Tasks.Task<ConsoleAdmin.SapoManagerService.Politician> GeneratePoliticianAsync(string name, string party);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPoliticianServiceChannel : ConsoleAdmin.SapoManagerService.IPoliticianService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PoliticianServiceClient : System.ServiceModel.ClientBase<ConsoleAdmin.SapoManagerService.IPoliticianService>, ConsoleAdmin.SapoManagerService.IPoliticianService {
        
        public PoliticianServiceClient() {
        }
        
        public PoliticianServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PoliticianServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PoliticianServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PoliticianServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsoleAdmin.SapoManagerService.Politician GeneratePolitician(string name, string party) {
            return base.Channel.GeneratePolitician(name, party);
        }
        
        public System.Threading.Tasks.Task<ConsoleAdmin.SapoManagerService.Politician> GeneratePoliticianAsync(string name, string party) {
            return base.Channel.GeneratePoliticianAsync(name, party);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SapoManagerService.IProposalService")]
    public interface IProposalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProposalService/GenerateProposal", ReplyAction="http://tempuri.org/IProposalService/GenerateProposalResponse")]
        ConsoleAdmin.SapoManagerService.Proposal GenerateProposal(string title, string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProposalService/GenerateProposal", ReplyAction="http://tempuri.org/IProposalService/GenerateProposalResponse")]
        System.Threading.Tasks.Task<ConsoleAdmin.SapoManagerService.Proposal> GenerateProposalAsync(string title, string text);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProposalServiceChannel : ConsoleAdmin.SapoManagerService.IProposalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProposalServiceClient : System.ServiceModel.ClientBase<ConsoleAdmin.SapoManagerService.IProposalService>, ConsoleAdmin.SapoManagerService.IProposalService {
        
        public ProposalServiceClient() {
        }
        
        public ProposalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProposalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProposalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProposalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsoleAdmin.SapoManagerService.Proposal GenerateProposal(string title, string text) {
            return base.Channel.GenerateProposal(title, text);
        }
        
        public System.Threading.Tasks.Task<ConsoleAdmin.SapoManagerService.Proposal> GenerateProposalAsync(string title, string text) {
            return base.Channel.GenerateProposalAsync(title, text);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SapoManagerService.IPoliticianProposalService")]
    public interface IPoliticianProposalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPoliticianProposalService/GeneratePoliticianProposal", ReplyAction="http://tempuri.org/IPoliticianProposalService/GeneratePoliticianProposalResponse")]
        ConsoleAdmin.SapoManagerService.PoliticianProposal GeneratePoliticianProposal(System.Guid idPolitician, System.Guid idProposal, bool vote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPoliticianProposalService/GeneratePoliticianProposal", ReplyAction="http://tempuri.org/IPoliticianProposalService/GeneratePoliticianProposalResponse")]
        System.Threading.Tasks.Task<ConsoleAdmin.SapoManagerService.PoliticianProposal> GeneratePoliticianProposalAsync(System.Guid idPolitician, System.Guid idProposal, bool vote);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPoliticianProposalServiceChannel : ConsoleAdmin.SapoManagerService.IPoliticianProposalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PoliticianProposalServiceClient : System.ServiceModel.ClientBase<ConsoleAdmin.SapoManagerService.IPoliticianProposalService>, ConsoleAdmin.SapoManagerService.IPoliticianProposalService {
        
        public PoliticianProposalServiceClient() {
        }
        
        public PoliticianProposalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PoliticianProposalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PoliticianProposalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PoliticianProposalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsoleAdmin.SapoManagerService.PoliticianProposal GeneratePoliticianProposal(System.Guid idPolitician, System.Guid idProposal, bool vote) {
            return base.Channel.GeneratePoliticianProposal(idPolitician, idProposal, vote);
        }
        
        public System.Threading.Tasks.Task<ConsoleAdmin.SapoManagerService.PoliticianProposal> GeneratePoliticianProposalAsync(System.Guid idPolitician, System.Guid idProposal, bool vote) {
            return base.Channel.GeneratePoliticianProposalAsync(idPolitician, idProposal, vote);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SapoManagerService.IElectorService")]
    public interface IElectorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectorService/GenerateElector", ReplyAction="http://tempuri.org/IElectorService/GenerateElectorResponse")]
        ConsoleAdmin.SapoManagerService.Elector GenerateElector(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectorService/GenerateElector", ReplyAction="http://tempuri.org/IElectorService/GenerateElectorResponse")]
        System.Threading.Tasks.Task<ConsoleAdmin.SapoManagerService.Elector> GenerateElectorAsync(string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IElectorServiceChannel : ConsoleAdmin.SapoManagerService.IElectorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ElectorServiceClient : System.ServiceModel.ClientBase<ConsoleAdmin.SapoManagerService.IElectorService>, ConsoleAdmin.SapoManagerService.IElectorService {
        
        public ElectorServiceClient() {
        }
        
        public ElectorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ElectorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ElectorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ElectorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsoleAdmin.SapoManagerService.Elector GenerateElector(string userName) {
            return base.Channel.GenerateElector(userName);
        }
        
        public System.Threading.Tasks.Task<ConsoleAdmin.SapoManagerService.Elector> GenerateElectorAsync(string userName) {
            return base.Channel.GenerateElectorAsync(userName);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SapoManagerService.IElectorProposalService")]
    public interface IElectorProposalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectorProposalService/GenerateElectorProposal", ReplyAction="http://tempuri.org/IElectorProposalService/GenerateElectorProposalResponse")]
        ConsoleAdmin.SapoManagerService.ElectorProposal GenerateElectorProposal(System.Guid idElector, System.Guid idProposal, bool vote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElectorProposalService/GenerateElectorProposal", ReplyAction="http://tempuri.org/IElectorProposalService/GenerateElectorProposalResponse")]
        System.Threading.Tasks.Task<ConsoleAdmin.SapoManagerService.ElectorProposal> GenerateElectorProposalAsync(System.Guid idElector, System.Guid idProposal, bool vote);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IElectorProposalServiceChannel : ConsoleAdmin.SapoManagerService.IElectorProposalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ElectorProposalServiceClient : System.ServiceModel.ClientBase<ConsoleAdmin.SapoManagerService.IElectorProposalService>, ConsoleAdmin.SapoManagerService.IElectorProposalService {
        
        public ElectorProposalServiceClient() {
        }
        
        public ElectorProposalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ElectorProposalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ElectorProposalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ElectorProposalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsoleAdmin.SapoManagerService.ElectorProposal GenerateElectorProposal(System.Guid idElector, System.Guid idProposal, bool vote) {
            return base.Channel.GenerateElectorProposal(idElector, idProposal, vote);
        }
        
        public System.Threading.Tasks.Task<ConsoleAdmin.SapoManagerService.ElectorProposal> GenerateElectorProposalAsync(System.Guid idElector, System.Guid idProposal, bool vote) {
            return base.Channel.GenerateElectorProposalAsync(idElector, idProposal, vote);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SapoManagerService.IPersistService")]
    public interface IPersistService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistService/SavePoliticians", ReplyAction="http://tempuri.org/IPersistService/SavePoliticiansResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConsoleAdmin.SapoManagerService.AutenticationException), Action="http://tempuri.org/IPersistService/SavePoliticiansAutenticationExceptionFault", Name="AutenticationException", Namespace="http://schemas.datacontract.org/2004/07/WcfSapoManagerLibrary.Exception")]
        bool SavePoliticians(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.Politician> politiciansQueue, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistService/SavePoliticians", ReplyAction="http://tempuri.org/IPersistService/SavePoliticiansResponse")]
        System.Threading.Tasks.Task<bool> SavePoliticiansAsync(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.Politician> politiciansQueue, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistService/SaveProposals", ReplyAction="http://tempuri.org/IPersistService/SaveProposalsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConsoleAdmin.SapoManagerService.AutenticationException), Action="http://tempuri.org/IPersistService/SaveProposalsAutenticationExceptionFault", Name="AutenticationException", Namespace="http://schemas.datacontract.org/2004/07/WcfSapoManagerLibrary.Exception")]
        bool SaveProposals(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.Proposal> proposalsQueue, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistService/SaveProposals", ReplyAction="http://tempuri.org/IPersistService/SaveProposalsResponse")]
        System.Threading.Tasks.Task<bool> SaveProposalsAsync(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.Proposal> proposalsQueue, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistService/SaveElectors", ReplyAction="http://tempuri.org/IPersistService/SaveElectorsResponse")]
        bool SaveElectors(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.Elector> electorsQueue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistService/SaveElectors", ReplyAction="http://tempuri.org/IPersistService/SaveElectorsResponse")]
        System.Threading.Tasks.Task<bool> SaveElectorsAsync(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.Elector> electorsQueue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistService/SaveElectorProposals", ReplyAction="http://tempuri.org/IPersistService/SaveElectorProposalsResponse")]
        bool SaveElectorProposals(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.ElectorProposal> electorProposalsQueue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistService/SaveElectorProposals", ReplyAction="http://tempuri.org/IPersistService/SaveElectorProposalsResponse")]
        System.Threading.Tasks.Task<bool> SaveElectorProposalsAsync(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.ElectorProposal> electorProposalsQueue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistService/SavePoliticianProposals", ReplyAction="http://tempuri.org/IPersistService/SavePoliticianProposalsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ConsoleAdmin.SapoManagerService.AutenticationException), Action="http://tempuri.org/IPersistService/SavePoliticianProposalsAutenticationExceptionF" +
            "ault", Name="AutenticationException", Namespace="http://schemas.datacontract.org/2004/07/WcfSapoManagerLibrary.Exception")]
        bool SavePoliticianProposals(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.PoliticianProposal> politicianProposalsQueue, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistService/SavePoliticianProposals", ReplyAction="http://tempuri.org/IPersistService/SavePoliticianProposalsResponse")]
        System.Threading.Tasks.Task<bool> SavePoliticianProposalsAsync(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.PoliticianProposal> politicianProposalsQueue, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistService/LoadProposals", ReplyAction="http://tempuri.org/IPersistService/LoadProposalsResponse")]
        System.Collections.Generic.List<ConsoleAdmin.SapoManagerService.Proposal> LoadProposals();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistService/LoadProposals", ReplyAction="http://tempuri.org/IPersistService/LoadProposalsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleAdmin.SapoManagerService.Proposal>> LoadProposalsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistService/LoadPoliticians", ReplyAction="http://tempuri.org/IPersistService/LoadPoliticiansResponse")]
        System.Collections.Generic.List<ConsoleAdmin.SapoManagerService.Politician> LoadPoliticians();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistService/LoadPoliticians", ReplyAction="http://tempuri.org/IPersistService/LoadPoliticiansResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleAdmin.SapoManagerService.Politician>> LoadPoliticiansAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersistServiceChannel : ConsoleAdmin.SapoManagerService.IPersistService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersistServiceClient : System.ServiceModel.ClientBase<ConsoleAdmin.SapoManagerService.IPersistService>, ConsoleAdmin.SapoManagerService.IPersistService {
        
        public PersistServiceClient() {
        }
        
        public PersistServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersistServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersistServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersistServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SavePoliticians(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.Politician> politiciansQueue, string userName, string password) {
            return base.Channel.SavePoliticians(politiciansQueue, userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> SavePoliticiansAsync(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.Politician> politiciansQueue, string userName, string password) {
            return base.Channel.SavePoliticiansAsync(politiciansQueue, userName, password);
        }
        
        public bool SaveProposals(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.Proposal> proposalsQueue, string userName, string password) {
            return base.Channel.SaveProposals(proposalsQueue, userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> SaveProposalsAsync(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.Proposal> proposalsQueue, string userName, string password) {
            return base.Channel.SaveProposalsAsync(proposalsQueue, userName, password);
        }
        
        public bool SaveElectors(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.Elector> electorsQueue) {
            return base.Channel.SaveElectors(electorsQueue);
        }
        
        public System.Threading.Tasks.Task<bool> SaveElectorsAsync(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.Elector> electorsQueue) {
            return base.Channel.SaveElectorsAsync(electorsQueue);
        }
        
        public bool SaveElectorProposals(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.ElectorProposal> electorProposalsQueue) {
            return base.Channel.SaveElectorProposals(electorProposalsQueue);
        }
        
        public System.Threading.Tasks.Task<bool> SaveElectorProposalsAsync(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.ElectorProposal> electorProposalsQueue) {
            return base.Channel.SaveElectorProposalsAsync(electorProposalsQueue);
        }
        
        public bool SavePoliticianProposals(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.PoliticianProposal> politicianProposalsQueue, string userName, string password) {
            return base.Channel.SavePoliticianProposals(politicianProposalsQueue, userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> SavePoliticianProposalsAsync(System.Collections.Generic.Queue<ConsoleAdmin.SapoManagerService.PoliticianProposal> politicianProposalsQueue, string userName, string password) {
            return base.Channel.SavePoliticianProposalsAsync(politicianProposalsQueue, userName, password);
        }
        
        public System.Collections.Generic.List<ConsoleAdmin.SapoManagerService.Proposal> LoadProposals() {
            return base.Channel.LoadProposals();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleAdmin.SapoManagerService.Proposal>> LoadProposalsAsync() {
            return base.Channel.LoadProposalsAsync();
        }
        
        public System.Collections.Generic.List<ConsoleAdmin.SapoManagerService.Politician> LoadPoliticians() {
            return base.Channel.LoadPoliticians();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleAdmin.SapoManagerService.Politician>> LoadPoliticiansAsync() {
            return base.Channel.LoadPoliticiansAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SapoManagerService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AutenticateContributor", ReplyAction="http://tempuri.org/IUserService/AutenticateContributorResponse")]
        bool AutenticateContributor(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AutenticateContributor", ReplyAction="http://tempuri.org/IUserService/AutenticateContributorResponse")]
        System.Threading.Tasks.Task<bool> AutenticateContributorAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUser", ReplyAction="http://tempuri.org/IUserService/AddUserResponse")]
        void AddUser(string userName, string password, bool isContributor, bool isAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUser", ReplyAction="http://tempuri.org/IUserService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(string userName, string password, bool isContributor, bool isAdmin);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : ConsoleAdmin.SapoManagerService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<ConsoleAdmin.SapoManagerService.IUserService>, ConsoleAdmin.SapoManagerService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AutenticateContributor(string userName, string password) {
            return base.Channel.AutenticateContributor(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> AutenticateContributorAsync(string userName, string password) {
            return base.Channel.AutenticateContributorAsync(userName, password);
        }
        
        public void AddUser(string userName, string password, bool isContributor, bool isAdmin) {
            base.Channel.AddUser(userName, password, isContributor, isAdmin);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(string userName, string password, bool isContributor, bool isAdmin) {
            return base.Channel.AddUserAsync(userName, password, isContributor, isAdmin);
        }
    }
}
